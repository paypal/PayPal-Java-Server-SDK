/*
 * PaypalServerSdkLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sdk.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for AuthorizationsGetInput type.
 */
public class AuthorizationsGetInput {
    private String authorizationId;
    private String paypalAuthAssertion;

    /**
     * Default constructor.
     */
    public AuthorizationsGetInput() {
    }

    /**
     * Initialization constructor.
     * @param  authorizationId  String value for authorizationId.
     * @param  paypalAuthAssertion  String value for paypalAuthAssertion.
     */
    public AuthorizationsGetInput(
            String authorizationId,
            String paypalAuthAssertion) {
        this.authorizationId = authorizationId;
        this.paypalAuthAssertion = paypalAuthAssertion;
    }

    /**
     * Getter for AuthorizationId.
     * The ID of the authorized payment for which to show details.
     * @return Returns the String
     */
    @JsonGetter("authorization_id")
    public String getAuthorizationId() {
        return authorizationId;
    }

    /**
     * Setter for AuthorizationId.
     * The ID of the authorized payment for which to show details.
     * @param authorizationId Value for String
     */
    @JsonSetter("authorization_id")
    public void setAuthorizationId(String authorizationId) {
        this.authorizationId = authorizationId;
    }

    /**
     * Getter for PaypalAuthAssertion.
     * An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For
     * details, see
     * [PayPal-Auth-Assertion](/docs/api/reference/api-requests/#paypal-auth-assertion).&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt;For
     * three party transactions in which a partner is managing the API calls on behalf of a
     * merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header
     * or an access token with target_subject.&lt;/blockquote&gt;
     * @return Returns the String
     */
    @JsonGetter("PayPal-Auth-Assertion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaypalAuthAssertion() {
        return paypalAuthAssertion;
    }

    /**
     * Setter for PaypalAuthAssertion.
     * An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For
     * details, see
     * [PayPal-Auth-Assertion](/docs/api/reference/api-requests/#paypal-auth-assertion).&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt;For
     * three party transactions in which a partner is managing the API calls on behalf of a
     * merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header
     * or an access token with target_subject.&lt;/blockquote&gt;
     * @param paypalAuthAssertion Value for String
     */
    @JsonSetter("PayPal-Auth-Assertion")
    public void setPaypalAuthAssertion(String paypalAuthAssertion) {
        this.paypalAuthAssertion = paypalAuthAssertion;
    }

    /**
     * Converts this AuthorizationsGetInput into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AuthorizationsGetInput [" + "authorizationId=" + authorizationId
                + ", paypalAuthAssertion=" + paypalAuthAssertion + "]";
    }

    /**
     * Builds a new {@link AuthorizationsGetInput.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AuthorizationsGetInput.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(authorizationId)
                .paypalAuthAssertion(getPaypalAuthAssertion());
        return builder;
    }

    /**
     * Class to build instances of {@link AuthorizationsGetInput}.
     */
    public static class Builder {
        private String authorizationId;
        private String paypalAuthAssertion;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  authorizationId  String value for authorizationId.
         */
        public Builder(String authorizationId) {
            this.authorizationId = authorizationId;
        }

        /**
         * Setter for authorizationId.
         * @param  authorizationId  String value for authorizationId.
         * @return Builder
         */
        public Builder authorizationId(String authorizationId) {
            this.authorizationId = authorizationId;
            return this;
        }

        /**
         * Setter for paypalAuthAssertion.
         * @param  paypalAuthAssertion  String value for paypalAuthAssertion.
         * @return Builder
         */
        public Builder paypalAuthAssertion(String paypalAuthAssertion) {
            this.paypalAuthAssertion = paypalAuthAssertion;
            return this;
        }

        /**
         * Builds a new {@link AuthorizationsGetInput} object using the set fields.
         * @return {@link AuthorizationsGetInput}
         */
        public AuthorizationsGetInput build() {
            return new AuthorizationsGetInput(authorizationId, paypalAuthAssertion);
        }
    }
}
