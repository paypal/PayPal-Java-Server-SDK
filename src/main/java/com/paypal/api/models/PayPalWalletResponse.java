/*
 * PayPalRESTAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PayPalWalletResponse type.
 */
public class PayPalWalletResponse {
    private String emailAddress;
    private String accountId;
    private PayPalWalletAccountVerificationStatus accountStatus;
    private Name name;
    private PhoneType phoneType;
    private PhoneNumber phoneNumber;
    private String birthDate;
    private TaxInfo taxInfo;
    private Address address;
    private PayPalWalletAttributesResponse attributes;

    /**
     * Default constructor.
     */
    public PayPalWalletResponse() {
    }

    /**
     * Initialization constructor.
     * @param  emailAddress  String value for emailAddress.
     * @param  accountId  String value for accountId.
     * @param  accountStatus  PayPalWalletAccountVerificationStatus value for accountStatus.
     * @param  name  Name value for name.
     * @param  phoneType  PhoneType value for phoneType.
     * @param  phoneNumber  PhoneNumber value for phoneNumber.
     * @param  birthDate  String value for birthDate.
     * @param  taxInfo  TaxInfo value for taxInfo.
     * @param  address  Address value for address.
     * @param  attributes  PayPalWalletAttributesResponse value for attributes.
     */
    public PayPalWalletResponse(
            String emailAddress,
            String accountId,
            PayPalWalletAccountVerificationStatus accountStatus,
            Name name,
            PhoneType phoneType,
            PhoneNumber phoneNumber,
            String birthDate,
            TaxInfo taxInfo,
            Address address,
            PayPalWalletAttributesResponse attributes) {
        this.emailAddress = emailAddress;
        this.accountId = accountId;
        this.accountStatus = accountStatus;
        this.name = name;
        this.phoneType = phoneType;
        this.phoneNumber = phoneNumber;
        this.birthDate = birthDate;
        this.taxInfo = taxInfo;
        this.address = address;
        this.attributes = attributes;
    }

    /**
     * Getter for EmailAddress.
     * The internationalized email address.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Up to 64 characters
     * are allowed before and 255 characters are allowed after the &lt;code&gt;{@literal @}&lt;/code&gt; sign. However, the
     * generally accepted maximum length for an email address is 254 characters. The pattern
     * verifies that an unquoted &lt;code&gt;{@literal @}&lt;/code&gt; sign exists.&lt;/blockquote&gt;
     * @return Returns the String
     */
    @JsonGetter("email_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Setter for EmailAddress.
     * The internationalized email address.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Up to 64 characters
     * are allowed before and 255 characters are allowed after the &lt;code&gt;{@literal @}&lt;/code&gt; sign. However, the
     * generally accepted maximum length for an email address is 254 characters. The pattern
     * verifies that an unquoted &lt;code&gt;{@literal @}&lt;/code&gt; sign exists.&lt;/blockquote&gt;
     * @param emailAddress Value for String
     */
    @JsonSetter("email_address")
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    /**
     * Getter for AccountId.
     * The PayPal payer ID, which is a masked version of the PayPal account number intended for use
     * with third parties. The account number is reversibly encrypted and a proprietary variant of
     * Base32 is used to encode the result.
     * @return Returns the String
     */
    @JsonGetter("account_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountId() {
        return accountId;
    }

    /**
     * Setter for AccountId.
     * The PayPal payer ID, which is a masked version of the PayPal account number intended for use
     * with third parties. The account number is reversibly encrypted and a proprietary variant of
     * Base32 is used to encode the result.
     * @param accountId Value for String
     */
    @JsonSetter("account_id")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for AccountStatus.
     * The account status indicates whether the buyer has verified the financial details associated
     * with their PayPal account.
     * @return Returns the PayPalWalletAccountVerificationStatus
     */
    @JsonGetter("account_status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PayPalWalletAccountVerificationStatus getAccountStatus() {
        return accountStatus;
    }

    /**
     * Setter for AccountStatus.
     * The account status indicates whether the buyer has verified the financial details associated
     * with their PayPal account.
     * @param accountStatus Value for PayPalWalletAccountVerificationStatus
     */
    @JsonSetter("account_status")
    public void setAccountStatus(PayPalWalletAccountVerificationStatus accountStatus) {
        this.accountStatus = accountStatus;
    }

    /**
     * Getter for Name.
     * The name of the party.
     * @return Returns the Name
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Name getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the party.
     * @param name Value for Name
     */
    @JsonSetter("name")
    public void setName(Name name) {
        this.name = name;
    }

    /**
     * Getter for PhoneType.
     * The phone type.
     * @return Returns the PhoneType
     */
    @JsonGetter("phone_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PhoneType getPhoneType() {
        return phoneType;
    }

    /**
     * Setter for PhoneType.
     * The phone type.
     * @param phoneType Value for PhoneType
     */
    @JsonSetter("phone_type")
    public void setPhoneType(PhoneType phoneType) {
        this.phoneType = phoneType;
    }

    /**
     * Getter for PhoneNumber.
     * The phone number in its canonical international [E.164 numbering plan
     * format](https://www.itu.int/rec/T-REC-E.164/en).
     * @return Returns the PhoneNumber
     */
    @JsonGetter("phone_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PhoneNumber getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Setter for PhoneNumber.
     * The phone number in its canonical international [E.164 numbering plan
     * format](https://www.itu.int/rec/T-REC-E.164/en).
     * @param phoneNumber Value for PhoneNumber
     */
    @JsonSetter("phone_number")
    public void setPhoneNumber(PhoneNumber phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Getter for BirthDate.
     * The stand-alone date, in [Internet date and time
     * format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values,
     * such as a date of birth, you should use dates with no associated time or time-zone data.
     * Whenever possible, use the standard `date_time` type. This regular expression does not
     * validate all dates. For example, February 31 is valid and nothing is known about leap years.
     * @return Returns the String
     */
    @JsonGetter("birth_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBirthDate() {
        return birthDate;
    }

    /**
     * Setter for BirthDate.
     * The stand-alone date, in [Internet date and time
     * format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values,
     * such as a date of birth, you should use dates with no associated time or time-zone data.
     * Whenever possible, use the standard `date_time` type. This regular expression does not
     * validate all dates. For example, February 31 is valid and nothing is known about leap years.
     * @param birthDate Value for String
     */
    @JsonSetter("birth_date")
    public void setBirthDate(String birthDate) {
        this.birthDate = birthDate;
    }

    /**
     * Getter for TaxInfo.
     * The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and
     * `tax_id_type` are required.
     * @return Returns the TaxInfo
     */
    @JsonGetter("tax_info")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TaxInfo getTaxInfo() {
        return taxInfo;
    }

    /**
     * Setter for TaxInfo.
     * The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and
     * `tax_id_type` are required.
     * @param taxInfo Value for TaxInfo
     */
    @JsonSetter("tax_info")
    public void setTaxInfo(TaxInfo taxInfo) {
        this.taxInfo = taxInfo;
    }

    /**
     * Getter for Address.
     * The portable international postal address. Maps to
     * [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata)
     * and HTML 5.1 [Autofilling form controls: the autocomplete
     * attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
     * @return Returns the Address
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Address getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * The portable international postal address. Maps to
     * [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata)
     * and HTML 5.1 [Autofilling form controls: the autocomplete
     * attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
     * @param address Value for Address
     */
    @JsonSetter("address")
    public void setAddress(Address address) {
        this.address = address;
    }

    /**
     * Getter for Attributes.
     * Additional attributes associated with the use of a PayPal Wallet.
     * @return Returns the PayPalWalletAttributesResponse
     */
    @JsonGetter("attributes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PayPalWalletAttributesResponse getAttributes() {
        return attributes;
    }

    /**
     * Setter for Attributes.
     * Additional attributes associated with the use of a PayPal Wallet.
     * @param attributes Value for PayPalWalletAttributesResponse
     */
    @JsonSetter("attributes")
    public void setAttributes(PayPalWalletAttributesResponse attributes) {
        this.attributes = attributes;
    }

    /**
     * Converts this PayPalWalletResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PayPalWalletResponse [" + "emailAddress=" + emailAddress + ", accountId="
                + accountId + ", accountStatus=" + accountStatus + ", name=" + name + ", phoneType="
                + phoneType + ", phoneNumber=" + phoneNumber + ", birthDate=" + birthDate
                + ", taxInfo=" + taxInfo + ", address=" + address + ", attributes=" + attributes
                + "]";
    }

    /**
     * Builds a new {@link PayPalWalletResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PayPalWalletResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .emailAddress(getEmailAddress())
                .accountId(getAccountId())
                .accountStatus(getAccountStatus())
                .name(getName())
                .phoneType(getPhoneType())
                .phoneNumber(getPhoneNumber())
                .birthDate(getBirthDate())
                .taxInfo(getTaxInfo())
                .address(getAddress())
                .attributes(getAttributes());
        return builder;
    }

    /**
     * Class to build instances of {@link PayPalWalletResponse}.
     */
    public static class Builder {
        private String emailAddress;
        private String accountId;
        private PayPalWalletAccountVerificationStatus accountStatus;
        private Name name;
        private PhoneType phoneType;
        private PhoneNumber phoneNumber;
        private String birthDate;
        private TaxInfo taxInfo;
        private Address address;
        private PayPalWalletAttributesResponse attributes;



        /**
         * Setter for emailAddress.
         * @param  emailAddress  String value for emailAddress.
         * @return Builder
         */
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * Setter for accountId.
         * @param  accountId  String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for accountStatus.
         * @param  accountStatus  PayPalWalletAccountVerificationStatus value for accountStatus.
         * @return Builder
         */
        public Builder accountStatus(PayPalWalletAccountVerificationStatus accountStatus) {
            this.accountStatus = accountStatus;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  Name value for name.
         * @return Builder
         */
        public Builder name(Name name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for phoneType.
         * @param  phoneType  PhoneType value for phoneType.
         * @return Builder
         */
        public Builder phoneType(PhoneType phoneType) {
            this.phoneType = phoneType;
            return this;
        }

        /**
         * Setter for phoneNumber.
         * @param  phoneNumber  PhoneNumber value for phoneNumber.
         * @return Builder
         */
        public Builder phoneNumber(PhoneNumber phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * Setter for birthDate.
         * @param  birthDate  String value for birthDate.
         * @return Builder
         */
        public Builder birthDate(String birthDate) {
            this.birthDate = birthDate;
            return this;
        }

        /**
         * Setter for taxInfo.
         * @param  taxInfo  TaxInfo value for taxInfo.
         * @return Builder
         */
        public Builder taxInfo(TaxInfo taxInfo) {
            this.taxInfo = taxInfo;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  Address value for address.
         * @return Builder
         */
        public Builder address(Address address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for attributes.
         * @param  attributes  PayPalWalletAttributesResponse value for attributes.
         * @return Builder
         */
        public Builder attributes(PayPalWalletAttributesResponse attributes) {
            this.attributes = attributes;
            return this;
        }

        /**
         * Builds a new {@link PayPalWalletResponse} object using the set fields.
         * @return {@link PayPalWalletResponse}
         */
        public PayPalWalletResponse build() {
            return new PayPalWalletResponse(emailAddress, accountId, accountStatus, name, phoneType,
                    phoneNumber, birthDate, taxInfo, address, attributes);
        }
    }
}
